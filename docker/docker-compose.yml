version: '3.1'
services:

  minio:
    image: minio/minio
    volumes:
      - minio:/data
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    command: server /data

  secondary_minio:
    image: minio/minio
    volumes:
      - /media/brandon:/data
    ports:
      - "9100:9000"
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    command: server /data

  db:
    image: postgres
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
      WORKSPACES_DB_USER: ${WORKSPACES_DB_USER}
      WORKSPACES_DB_PASS: ${WORKSPACES_DB_PASS}
    volumes:
      - db:/var/lib/postgresql/data
      - ./initdb.sh:/docker-entrypoint-initdb.d/init-user-db.sh
    ports:
      - "5555:5432"

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.0
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      discovery.type: single-node

  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.0
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elastic:9200
      ELASTICSEARCH_HOSTS: http://elastic:9200

  workspaces:
    depends_on:
      - db
    build:
      context: ../
      dockerfile: docker/Dockerfile
    ports:
      - "8100:8100"
    environment:
      WEB_CONCURRENCY: 4
      WIO_DATABASE_URI: postgres://${WORKSPACES_DB_USER}:${WORKSPACES_DB_PASS}@db:5432
    env_file: '.env'
volumes:
  db:
  minio:
